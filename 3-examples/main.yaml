
apiVersion: v1
kind: Namespace
metadata:
  name: dev-blazed-dev
  labels:
    app.kubernetes.io/name: dev-blazed-dev
    app.kubernetes.io/instance: dev-blazed-dev
    app.kubernetes.io/version: '20201201'
    app.kubernetes.io/managed-by: blazedpath
    blazedEnv: dev
    accountCode: blazed
    enviromentCode: dev
  annotations:
    downscaler/uptime: 'Mon-Fri 06:32-24:00 UTC,Tue-Sat 00:00-01:00 UTC'

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blazed-dev
  namespace: dev-blazed-dev
  labels:
    app.kubernetes.io/name: blazed-dev
    app.kubernetes.io/instance: blazed-dev
    app.kubernetes.io/version: '20201201'
    app.kubernetes.io/managed-by: blazedpath
    blazedEnv: dev
    accountCode: blazed
    enviromentCode: dev
imagePullSecrets:
  - name: docker.blazedpath.com-secret

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-resources
  namespace: dev-blazed-dev
  labels:
    app.kubernetes.io/name: compute-resources
    app.kubernetes.io/instance: compute-resources
    app.kubernetes.io/version: '20201201'
    app.kubernetes.io/managed-by: blazedpath
    blazedEnv: dev
    accountCode: blazed
    enviromentCode: dev
spec:
  hard:
    requests.cpu: '2'
    requests.memory: 4Gi
    limits.cpu: '4'
    limits.memory: 8Gi
    requests.nvidia.com/gpu: '4'

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: object-counts
  namespace: dev-blazed-dev
  labels:
    app.kubernetes.io/name: object-counts
    app.kubernetes.io/instance: object-counts
    app.kubernetes.io/version: '20201201'
    app.kubernetes.io/managed-by: blazedpath
    blazedEnv: dev
    accountCode: blazed
    enviromentCode: dev
spec:
  hard:
    configmaps: '40'
    secrets: '40'
    persistentvolumeclaims: '8'
    pods: '40'
    services: '20'
    services.loadbalancers: '0'

---
apiVersion: v1
data:
  tls.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZkRENDQkZ5Z0F3SUJBZ0lTQktKVlcrd0RKbWlSOUc1dXNtN2pnSEdlTUEwR0NTcUdTSWIzRFFFQkN3VUEKTUVveEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1TTXdJUVlEVlFRRApFeHBNWlhRbmN5QkZibU55ZVhCMElFRjFkR2h2Y21sMGVTQllNekFlRncweU1ERXhNRGt4TkRFNE1ESmFGdzB5Ck1UQXlNRGN4TkRFNE1ESmFNQjh4SFRBYkJnTlZCQU1NRkNvdVpHVjJMbUpzWVhwbFpIQmhkR2d1WTI5dE1JSUIKSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTREUFVtWEE0RmVrMzNLNDQ1eklHdUJnOApPOE1Mb2w5NVhJUWVtVXlVRkhJNlNtdUNZbERDVnRvdU56SUlvenpEWHh5dCtJYyt5bVB4V2lvK1dJSllYYTYyCnNhK0FZekV5QmRxRndNVitYczNWK2tvUGM1VXBIQmdJQVZ2THg0Kzd3YzRNR2xGWkNsd1lOcWFVeU9qNzhUaTEKMzdDQmFDN0VFUDVBWVpCdnlVZitiZWlJQllpMCtFc0pMbzN1b29Ic005UFNVbjZYaG1QUVpROHBiMXlpdnAzOQpFSkJvdkJ2TXQxOW1pcHFYMnRGWjVGSEVldmk4eFFQM0JkV0JTelV0azc1UzhLaUxTSEtNQmRiQWNRUEdKN3A1Cm1jMjkzOWNGbXppVDRkai9XbU9Fa2tGeFNWWnZPTTN1NE92ejU3LzRaVkZnR0x0Y3NPdUE4LzRub2lzTlRRSUQKQVFBQm80SUNmVENDQW5rd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQgpCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUmlhSi9Xblh6OXJBaVMvZnVkClJXa1MzeDUralRBZkJnTlZIU01FR0RBV2dCU29TbXBqQkgzZHV1YlJPYmVtUldYdjg2anNvVEJ2QmdnckJnRUYKQlFjQkFRUmpNR0V3TGdZSUt3WUJCUVVITUFHR0ltaDBkSEE2THk5dlkzTndMbWx1ZEMxNE15NXNaWFJ6Wlc1agpjbmx3ZEM1dmNtY3dMd1lJS3dZQkJRVUhNQUtHSTJoMGRIQTZMeTlqWlhKMExtbHVkQzE0TXk1c1pYUnpaVzVqCmNubHdkQzV2Y21jdk1ETUdBMVVkRVFRc01DcUNGQ291WkdWMkxtSnNZWHBsWkhCaGRHZ3VZMjl0Z2hKa1pYWXUKWW14aGVtVmtjR0YwYUM1amIyMHdUQVlEVlIwZ0JFVXdRekFJQmdabmdRd0JBZ0V3TndZTEt3WUJCQUdDM3hNQgpBUUV3S0RBbUJnZ3JCZ0VGQlFjQ0FSWWFhSFIwY0RvdkwyTndjeTVzWlhSelpXNWpjbmx3ZEM1dmNtY3dnZ0VFCkJnb3JCZ0VFQWRaNUFnUUNCSUgxQklIeUFQQUFkUUJ2VTNhc01mQXhHZGlaQUtSUkZmOTNGUndSMlFMQkFDa0cKamJJSW1qZlpFd0FBQVhXdGxlSFNBQUFFQXdCR01FUUNJQWwzSFM3UTB5ZVpWcHlXWFQvbWUzOEZnV2tFUC9obgp1WHJMVDJHQkpHTnZBaUJEM1BBdXN3dUhwWFpNdzIrRFZTVUlqUnJ6THFOSFJCOTAxL2tqQ0p2NjVnQjNBSDArCjh2aVAvNGhWYUNUQ3dNcWVVb2w1SzhVT2VBbC9MbXFYYUpsK0l2RFhBQUFCZGEyVjRkRUFBQVFEQUVnd1JnSWgKQUxId0ROck14TWVsTk4rZ2d2R3ZVd1cvSWFOZFgzb3pKZWVLWlZXejk4SnlBaUVBMk1tSkFrdytaNVQxNDBCeApzUDd4MnhKRnVQaFRBRHBOUEpxVVJ1VDBSWDR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlVR2hpblE1NTZsCkNnYVE1OFcyV3lGcnA2SVkreTc1ZFlJUjZweFRoWEVJdW5YWWU0YVcyd0VIS0hlTURkd0JyRHVOSUZGd3NjTEsKVW1reXdLTVVTMFNKam4vQVJoclRoUWx6L0Y5cGpWa0JHdmgrYldNc1d3RU95RnJEb1ladGtzbEVkd3VGL2NSdQpFQVV5aDNkM0RMR3ppYzRTdFFzWkNuYzIzbkluZXU3RnI2cDlTZjY2TGtLRHFsV0Noam5EKy84OGxsekE3S3pvCjJJMGhjQkwzV00wV01VVEJQNWFVdWVUNGdlTVMrMVhPeDRsK0ZTM2ZWdWZ2SjZKdVk1bVlJa0xrTVJWUy9Rck8KMXhJdk9TbEt3Tk5VLzZvS2xUN1pFci9pVVFIS2ZOSlRDQ2ljeEN0SkNXeFJlcDdsMVpUb1lMZmxXaEo2elNUdAo3VXlDTFNhV0w1Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRWtqQ0NBM3FnQXdJQkFnSVFDZ0ZCUWdBQUFWT0ZjMm9MaGV5bkNEQU5CZ2txaGtpRzl3MEJBUXNGQURBLwpNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UCkRrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERURTJNRE14TnpFMk5EQTBObG9YRFRJeE1ETXhOekUyTkRBME5sb3cKU2pFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBb1REVXhsZENkeklFVnVZM0o1Y0hReEl6QWhCZ05WQkFNVApHa3hsZENkeklFVnVZM0o1Y0hRZ1FYVjBhRzl5YVhSNUlGZ3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFuTk1NOEZybExrZTNjbDAzZzdOb1l6RHExelVtR1NYaHZiNDE4WENTTDdlNFMwRUYKcTZtZU5RaFk3TEVxeEdpSEM2UGpkZVRtODZkaWNicDVnV0FmMTVHYW4vUFFlR2R4eUdrT2xaSFAvdWFaNldBOApTTXgreWsxM0VpU2RSeHRhNjduc0hqY0FISnlzZTZjRjZzNUs2NzFCNVRhWXVjdjliVHlXYU44aktrS1FESVowClo4aC9wWnE0VW1FVUV6OWw2WUtIeTl2NkRsYjJob256aFQrWGhxK3czQnJ2YXcyVkZuM0VLNkJsc3BrRU5uV0EKYTZ4Szh4dVFTWGd2b3BaUEtpQWxLUVRHZE1EUU1jMlBNVGlWRnJxb003aEQ4YkVmd3pCL29ua3hFejB0TnZqagovUEl6YXJrNU1jV3Z4STBOSFdRV002cjZoQ20yMUF2QTJIM0Rrd0lEQVFBQm80SUJmVENDQVhrd0VnWURWUjBUCkFRSC9CQWd3QmdFQi93SUJBREFPQmdOVkhROEJBZjhFQkFNQ0FZWXdmd1lJS3dZQkJRVUhBUUVFY3pCeE1ESUcKQ0NzR0FRVUZCekFCaGlab2RIUndPaTh2YVhOeVp5NTBjblZ6ZEdsa0xtOWpjM0F1YVdSbGJuUnlkWE4wTG1OdgpiVEE3QmdnckJnRUZCUWN3QW9ZdmFIUjBjRG92TDJGd2NITXVhV1JsYm5SeWRYTjBMbU52YlM5eWIyOTBjeTlrCmMzUnliMjkwWTJGNE15NXdOMk13SHdZRFZSMGpCQmd3Rm9BVXhLZXhwSHNzY2ZyYjRVdVFkZi9FRldDRmlSQXcKVkFZRFZSMGdCRTB3U3pBSUJnWm5nUXdCQWdFd1B3WUxLd1lCQkFHQzN4TUJBUUV3TURBdUJnZ3JCZ0VGQlFjQwpBUllpYUhSMGNEb3ZMMk53Y3k1eWIyOTBMWGd4TG14bGRITmxibU55ZVhCMExtOXlaekE4QmdOVkhSOEVOVEF6Ck1ER2dMNkF0aGl0b2RIUndPaTh2WTNKc0xtbGtaVzUwY25WemRDNWpiMjB2UkZOVVVrOVBWRU5CV0RORFVrd3UKWTNKc01CMEdBMVVkRGdRV0JCU29TbXBqQkgzZHV1YlJPYmVtUldYdjg2anNvVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQTNUUFhFZk5qV0RqZEdCWDdDVlcrZGxhNWNFaWxhVWNuZThJa0NKTHhXaDlLRWlrM0pIUlJIR0pvCnVNMlZjR2ZsOTZTOFRpaFJ6WnZvcm9lZDZ0aTZXcUVCbXR6dzNXb2RhdGcrVnlPZXBoNEVZcHIvMXdYS3R4OC8Kd0FwSXZKU3d0bVZpNE1GVTVhTXFyU0RFNmVhNzNNajJ0Y015bzVqTWQ2am1lV1VISzhzby9qb1dVb0hPVWd3dQpYNFBvMVFZeiszZHN6a0RxTXA0ZmtseEJ3WFJzVzEwS1h6UE1UWitzT1BBdmV5eGluZG1qa1c4bEd5K1FzUmxHClBmWitHNlo2aDdtamVtMFkraVdsa1ljVjRQSVdMMWl3Qmk4c2FDYkdTNWpOMnA4TStYK1E3VU5LRWtST2IzTjYKS09xa3FtNTdUSDJIM2VESkFrU25oNi9ETkZ1MFFnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNERQVW1YQTRGZWszM0s0NDV6SUd1Qmc4TzhNTG9sOTVYSVFlbVV5VUZISTZTbXVDCllsRENWdG91TnpJSW96ekRYeHl0K0ljK3ltUHhXaW8rV0lKWVhhNjJzYStBWXpFeUJkcUZ3TVYrWHMzVitrb1AKYzVVcEhCZ0lBVnZMeDQrN3djNE1HbEZaQ2x3WU5xYVV5T2o3OFRpMTM3Q0JhQzdFRVA1QVlaQnZ5VWYrYmVpSQpCWWkwK0VzSkxvM3Vvb0hzTTlQU1VuNlhobVBRWlE4cGIxeWl2cDM5RUpCb3ZCdk10MTltaXBxWDJ0Rlo1RkhFCmV2aTh4UVAzQmRXQlN6VXRrNzVTOEtpTFNIS01CZGJBY1FQR0o3cDVtYzI5MzljRm16aVQ0ZGovV21PRWtrRngKU1Zadk9NM3U0T3Z6NTcvNFpWRmdHTHRjc091QTgvNG5vaXNOVFFJREFRQUJBb0lCQVFDSlhEZnNxZXd5d0dnUgpORXg0bVJXMHhHUmkyT1RQM2w2a1orMjNUa3VMRzFETE40THlhVGducmhTU2pIenVSZFFNK2EwOGp0L1JiOW4yCnU5cm1yelVrY0Y1T0RwQkNOV25JWEZHR0FYbWk2OGtsUnlxZ1RjcWFBNzhqMWZITG1pd1dXUDdoUU9Xa2l6ZnEKZzdTMFFzbll5RDNsaG1aQ1JpU3BwSndkS2pqU3Y3dGt2V0ZlaTdFZDIxVXVXbUhreXUzMWRiS2NoNXBqT01uUApWenVMQWsyZVY2aDZWbE1GTGc4akZNT3lpRDIyc2ZualVUa2ZzQ1BPM0dkWkdMY21HMkZRR2c4RTNtd1VSU2FlCmRFbGtPcVJRSEhKQ1NqYTJyUmxTV21mcGxpR3VmeFVGTXlDcFZhZko2NTIxWWhOMHNabFR4cWNxR3lyOVhmVFIKRWFJdllxQUJBb0dCQVBWbmpRWGhDL1F4cXlCeUlOQ0xlVW9YTEliQjI3REVoYXlaSkRiVzdIeGNNTy9RVFMxeQpVaGxoSDhlbkZPWEFvREtwdUdvRVl2dkNkT2hqL0lCV0lrd0M1VlZsQXcySmtMVW1reGpWdGFTK1JRdzhlUVk2CkZBYW05bXpoZFh2MmlXSUJpL0Z1T2hIeGpuRkpkMzg3MXN1Q1JoTUErNHpVdENObEZ4TG9ydFJOQW9HQkFPbmgKN3lIZWJHN21yZDJPRUgwZXAyWGZBOFRYN2NrTnZxTU9YMFk3Tm1ndHB1WjVQb0UvRWRqRXB1cDhBVzlrbkt1bwpmMXpuM0pSSXNPSzdXYkRWaVNzTEk1RXFDWFVPc3ZJOVRSZUN5K2lGd3lVLytVN1MrdGtDVC9Yb2VyTkJYZmFzCk0wdFhrNXdSMHFWUnJnbFB0ZUF3dWdlUkJ1N2VXajFoS1BYTzdaMEJBb0dCQU5HTzU2SUpsMGVqMGxvV20yYjYKYzB5TmxYeE50dWl3S09aR3IrSVVqa1YwQkdZRkhxS2NhUGM3TlFRczdXOTBtbGdwRGsyYUNWeXJwV0Y5WUhYSApGK3FJM29XWmlJM2Exek9hQ1NxLzlDa0dRYmc5TzZ2UmxLQkptMDFIQ2lnZFV4dlo3a0x3dWEzdzlJNVJDallnClJ6L3BzeVV2UloveFV4S1dsS21WQVJaUkFvR0JBTlJaVlZRTDdhbVhlZjZ4ME5pNUwwVzRBV1VFcEJtcWlBN2wKcXExS2I3Q1EybnRoVTlYblhKM1NsclpKVnNnN3NsL013YTZwdWNWTVpvWEZrcjZTY2xNSmJ3YUxBMEVyMGw5TQpOeVdFbFB5T0RrdFExVnV6QlJ4cEZBNXlRSTFtYVJqZzZrV2F3eU90cnZKNHdhb2tuRDVzSDB0bGFzVVFUeUJ4CmljMzhUaE1CQW9HQkFJcEpwdnMzQ0wrK1huY2pyS1p1TzFCVEZmeXRaeEI4WGdRTjVobkZ5bXpmQUtOMzcwajgKZmNWZHNwclQ4TmNhRm1XSDR2SFB6dTNaNE1UTDJtU3grdzJzNEplWldKWWtwQWwwUnJaUEVjaElMZEFNSDBSMQpob015anZ2cStOMXRzanY1My9zeElXZ3dzQXVXRndqOVgwUC84VGFQYUtnMHo1andtTnlFREZBdwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    cert-manager.io/alt-names: '*.dev.blazedpath.com,dev.blazedpath.com'
    cert-manager.io/certificate-name: dev-blazedpath-com-tls
    cert-manager.io/common-name: '*.dev.blazedpath.com'
    cert-manager.io/ip-sans: ''
    cert-manager.io/issuer-group: ''
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-prod
    cert-manager.io/uri-sans: ''
  name: dev-blazedpath-com-tls
  namespace: dev-blazed-dev
type: kubernetes.io/tls

---
kind: Secret
apiVersion: v1
metadata:
  name: docker.blazedpath.com-secret
  namespace: dev-blazed-dev
  labels:
    app.kubernetes.io/name: docker.blazedpath.com-secret
    app.kubernetes.io/instance: docker.blazedpath.com-secret
    app.kubernetes.io/version: '20201201'
    app.kubernetes.io/managed-by: blazedpath
    blazedEnv: dev
    accountCode: blazed
    enviromentCode: dev
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJkb2NrZXIuYmxhemVkcGF0aC5jb20iOnsidXNlcm5hbWUiOiJtc2RlcGxveWVyIiwicGFzc3dvcmQiOiJtc2RlcGxveWVyIiwiYXV0aCI6ImJYTmtaWEJzYjNsbGNqcHRjMlJsY0d4dmVXVnkifX19
