apiVersion: v1
kind: Secret
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
data:
  # DB_VENDOR: bXlzcWw=
  # DB_ADDR: MTAuMC4xLjE=
  # DB_PORT: MzMwNg==
  # DB_DATABASE: a2V5Y2xvYWs= 
  # DB_USER: a2V5Y2xvYWs=
  # DB_PASSWORD: a2V5Y2xvYWs=
  KEYCLOAK_USER: ZmxhdmlvbHJpdGFAaG90bWFpbC5jb20=
  KEYCLOAK_PASSWORD: a2V5Y2xvYWs=  
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: keycloak-data
#   namespace: keycloak
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 3Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/opt/jboss/keycloak/"  
# ---        
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: keycloak-data
#   namespace: keycloak
#   labels:
#     app: keycloak
# spec:
#   storageClassName: manual
#   resources:
#     requests:
#       storage: 3Gi
#   accessModes:
#     - ReadWriteOnce
---
apiVersion: apps/v1
#kind: StatefulSet
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  #serviceName: keycloak 
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:      
      containers:
      - name: keycloak
        image: jboss/keycloak:11.0.2       
        env:
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        envFrom:
        - secretRef:
            name: keycloak
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        resources:
          limits:
            cpu: "250m"
            memory: 500Mi
          requests:
            cpu: "250m"
            memory: 500Mi
        # volumeMounts:
        #   -  name: keycloak-data-volume
        #      mountPath: /opt/jboss/keycloak/themes/blazedpath
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
        # readinessProbe:
        #   httpGet:
        #     path: /auth/realms/master
        #     port: 8080
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        # livenessProbe:
        #   httpGet:
        #     path: /auth/realms/master
        #     port: 8080
        #   initialDelaySeconds: 15
        #   periodSeconds: 20
      # volumes:
      #     - name: keycloak-data-volume
      #       persistentVolumeClaim:
      #         claimName: keycloak-data

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: keycloak
  minReplicas: 1
  maxReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: https
    port: 8443
    targetPort: 8443
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
  annotations:
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
spec:
  # tls:
  #   - hosts:
  #       - keycloak.example.com
  #     secretName: keycloak-tls
  rules:
    - host: keycloak.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080